# HELK Catchall for unparsed logs, critical parse failure logs that could be destructive to database, and additional future usage for simple outputs
# HELK build Stage: Alpha
# Author: Nate Guagenti (@neu5ron)
# License: GPL-3.0


output {

  # NO critical errors in parsing
  if [@metadata][parse-failure] != "yes" {

    # Zeek/Corelight
    if [event_log] == "zeek" {
      kafka {
        bootstrap_servers => "helk-kafka-broker:9092"
        codec => "json"
        topic_id => "parsed_zeek"
      }
      #if "[@metadata][enable_es]" == "true" {
      #  elasticsearch {
      #    hosts => ["${ES_HOST:helk-elasticsearch}:${ES_PORT:9200}"]
      #    index => "logs-network-zeek-%{+YYYY.MM.dd}"
      #    #document_id => "%{[@metadata][log_hash]}"
      #    user => 'elastic'
          #password => 'elasticpassword'
      #  }
      #}
    }

    # Unparsed syslog
    else if [@metadata][helk_parsed] != "yes" and [etl_input_application_name] =~ "^syslog" {
      kafka {
        bootstrap_servers => "helk-kafka-broker:9092"
        codec => "json"
        topic_id => "catch_all"
      }
      #if "[@metadata][enable_es]" == "true" {
      #  elasticsearch {
      #    hosts => ["${ES_HOST:helk-elasticsearch}:${ES_PORT:9200}"]
      #    index => "indexme-syslog-%{etl_input_port}-%{+YYYY.MM.dd}"
      #    document_id => "%{[@metadata][log_hash]}"
      #    user => 'elastic'
          #password => 'elasticpassword'
      #  }
      #}
    }

    # Not in schema yet
    else if [@metadata][helk_parsed] != "yes" and [source] != "/var/log/osquery/osqueryd.results.log" and [@metadata][kafka][topic] != "SYSMON_JOIN" and [@metadata][helk_input_source] != "mitre_attack" and [type] != "clone" {
      # Zeek temporary not in schema
      if [event_log] == "zeek" {
        kafka {
          bootstrap_servers => "helk-kafka-broker:9092"
          codec => "json"
          topic_id => "catch_all"
        }
        #if "[@metadata][enable_es]" == "true" {
        #  elasticsearch {
        #    hosts => ["${ES_HOST:helk-elasticsearch}:${ES_PORT:9200}"]
        #    index => "indexme-zeek-%{+YYYY.MM.dd}"
        #    # document_id => "%{[@metadata][log_hash]}"
        #    user => 'elastic'
            #password => 'elasticpassword'
        #  }
        #}
      }
      else {
        kafka {
          bootstrap_servers => "helk-kafka-broker:9092"
          codec => "json"
          topic_id => "catch_all"
        }
        #if "[@metadata][enable_es]" == "true" {
        #  elasticsearch {
        #    hosts => ["${ES_HOST:helk-elasticsearch}:${ES_PORT:9200}"]
        #    index => "indexme-%{+YYYY.MM.dd}"
            # document_id => "%{[@metadata][log_hash]}"
        #    user => 'elastic'
            #password => 'elasticpassword'
        #  }
        #}
      }
    }

  }

  # Critical parse failure
  else {
    kafka {
      bootstrap_servers => "helk-kafka-broker:9092"
      codec => "json"
      topic_id => "catch_all"
    }
    #if "[@metadata][enable_es]" == "true" {
    #  elasticsearch {
    #    hosts => ["${ES_HOST:helk-elasticsearch}:${ES_PORT:9200}"]
    #    index => "parse-failures-%{+YYYY.MM.dd}"
        # document_id => "%{[@metadata][log_hash]}"
    #    user => 'elastic'
        #password => 'elasticpassword'
    #  }
    #}
  }
}